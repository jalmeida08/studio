server:
  port: 8083

spring:
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
  kafka:
    producer:
      bootstrap-servers:
      - "http://localhost:9092"
      key-serializer:
        org.apache.kafka.common.serialization.StringSerializer
      value-serializer:
        org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers:
      - "http://localhost:9092"
      group-id: group-id
      auto-offset-reset: earliest
      key-deserializer:
        org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer:
        org.apache.kafka.common.serialization.ByteArrayDeserializer

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "${PROTOCOLO}://${EUREKA_SERVER_URL}:${EUREKA_SERVER_PORT}/eureka"
  instance:
    prefer-ip-address: true
    ip-address: ${IP_CONTAINER}
    instance-id: "${IP_CONTAINER}:${server.port}"
security:
  oauth2:
    resource:
      user-info-uri: "${PROTOCOLO}://${OAUTH_URL}:${OAUTH_PORT}/user"
      
logging:
  level:
    '[org.springframework.data.mongodb.core.MongoTemplate]': debug
  
app:
  kafka:
    producer:
      funcionario:
        novo-funcionario:
          topic: STUDIO_NOVO_FUNCIONARIO